{"version":3,"sources":["components/Feedback/Feedback.module.css","components/Container/Container.js","components/Feedback/Button.js","components/Feedback/FeedbackOptions.js","components/Feedback/Section.js","components/Feedback/Notification.js","components/Feedback/Statistics.js","App.js","index.js","components/Container/Container.module.css"],"names":["module","exports","Container","children","className","styles","container","Button","nameBtn","onLeaveFeedback","style","button","onClick","type","FeedbackOptions","options","button_container","map","key","Section","title","defaultProps","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","state","setState","Object","values","this","reduce","acc","stat","Math","round","countTotalFeedback","keys","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,iBAAmB,mCAAmC,OAAS,2B,uLCOtGC,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,yBAAKC,UAAWC,IAAOC,WAAYH,I,gBCexBI,EAfA,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACX,4BACIL,UAAWM,IAAMC,OACjBC,QAAS,kBAAMH,EAAgBD,IAC/BK,KAAK,UAEJL,ICaMM,EAjBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASN,EAAZ,EAAYA,gBAAZ,OACpB,yBAAKL,UAAWM,IAAMM,kBACjBD,EAAQE,KAAI,SAAAT,GAAO,OAChB,kBAAC,EAAD,CACIU,IAAKV,EACLA,QAASA,EACTC,gBAAiBA,SCV3BU,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOjB,EAAV,EAAUA,SAAV,OACZ,oCACI,4BAAKiB,GACJjB,IAQTgB,EAAQE,aAAe,CACnBD,MAAO,yBAGID,QCVAG,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,oCACI,2BAAIA,KC4BGC,EA3BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,oCACI,0CACCD,GACG,oCACI,oCAAUH,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,kDAAwBC,EAAxB,OAIND,GAAS,kBAAC,EAAD,CAAcL,QAAQ,wBCZxBO,E,4MACjBC,MAAQ,CACJN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAcTlB,gBAAkB,SAAAD,GACd,EAAKwB,SAAL,eAAiBxB,EAAU,EAAKuB,MAAMvB,GAAW,K,mEAXjD,OAAOyB,OAAOC,OAAOC,KAAKJ,OAAOK,QAAO,SAACC,EAAKC,GAE1C,OADAD,GAAOC,IAER,K,wDAIH,OAAOC,KAAKC,MAAOL,KAAKJ,MAAMN,KAAOU,KAAKM,qBAAwB,O,+BAO5D,IAAD,EAC0BN,KAAKJ,MAA5BN,EADH,EACGA,KAAME,EADT,EACSA,IAAKD,EADd,EACcA,QACnB,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASN,MAAM,yBACX,kBAAC,EAAD,CACIL,QAASkB,OAAOS,KAAKP,KAAKJ,OAC1BtB,gBAAiB0B,KAAK1B,kBAE1B,kBAAC,EAAD,CACIgB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOO,KAAKM,qBACZZ,mBAAoBM,KAAKQ,0C,GApChBC,a,YCCjCC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,U,kBCX5BjD,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.b3b0a752.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Feedback_section__ouBdc\",\"button_container\":\"Feedback_button_container__Vemxz\",\"button\":\"Feedback_button__1Eb1E\"};","import React from 'react';\r\n\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n    <div className={styles.container}>{children}</div>\r\n);\r\n\r\nexport default Container;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport style from './Feedback.module.css';\r\n\r\nconst Button = ({ nameBtn, onLeaveFeedback }) => (\r\n    <button\r\n        className={style.button}\r\n        onClick={() => onLeaveFeedback(nameBtn)}\r\n        type=\"button\"\r\n    >\r\n        {nameBtn}\r\n    </button>\r\n);\r\n\r\nButton.propTypes = {\r\n    nameBtn: PropTypes.string.isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from './Button';\r\n\r\nimport style from './Feedback.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n    <div className={style.button_container}>\r\n        {options.map(nameBtn => (\r\n            <Button\r\n                key={nameBtn}\r\n                nameBtn={nameBtn}\r\n                onLeaveFeedback={onLeaveFeedback}\r\n            />\r\n        ))}\r\n    </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n    <>\r\n        <h2>{title}</h2>\r\n        {children}\r\n    </>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n};\r\n\r\nSection.defaultProps = {\r\n    title: 'Awesome Section Title',\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\n\r\nconst Notification = ({ message }) => (\r\n    <>\r\n        <p>{message}</p>\r\n    </>\r\n);\r\n\r\nexport default Notification;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Notification from './Notification';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <>\r\n            <h2>Statistics</h2>\r\n            {total && (\r\n                <>\r\n                    <p>Good: {good}</p>\r\n                    <p>Neutral: {neutral}</p>\r\n                    <p>Bad: {bad}</p>\r\n                    <p>Total: {total}</p>\r\n                    <p>Positive feedbacks: {positivePercentage}%</p>\r\n                </>\r\n            )}\r\n\r\n            {!total && <Notification message=\"No feedback given\" />}\r\n        </>\r\n    );\r\n};\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import React, { Component } from 'react';\n\nimport Container from './components/Container';\nimport FeedbackOptions from './components/Feedback/FeedbackOptions';\nimport Section from './components/Feedback/Section';\nimport Statistics from './components/Feedback/Statistics';\n\nexport default class App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n\n    countTotalFeedback() {\n        return Object.values(this.state).reduce((acc, stat) => {\n            acc += stat;\n            return acc;\n        }, 0);\n    }\n\n    countPositiveFeedbackPercentage() {\n        return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n    }\n\n    onLeaveFeedback = nameBtn => {\n        this.setState({ [nameBtn]: this.state[nameBtn] + 1 });\n    };\n\n    render() {\n        const { good, bad, neutral } = this.state;\n        return (\n            <Container>\n                <Section title=\"Please leave feedback\">\n                    <FeedbackOptions\n                        options={Object.keys(this.state)}\n                        onLeaveFeedback={this.onLeaveFeedback}\n                    />\n                    <Statistics\n                        good={good}\n                        neutral={neutral}\n                        bad={bad}\n                        total={this.countTotalFeedback()}\n                        positivePercentage={this.countPositiveFeedbackPercentage()}\n                    />\n                </Section>\n            </Container>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3eJeI\"};"],"sourceRoot":""}